Q1=
Functions reduce the need for duplicate code. This makes programs shorter, easier to read, and easier to update.

Q2=
The code in a function executes when the function is called, not when the function is defined.

Q3=
The def statement defines (that is, creates) a function.

Q4=
A function consists of the def statement and the code in its def clause.

Q4=
A function call is what moves the program execution into the function, and the function call evaluates to the function’s return value.

Q5=
There is one global scope, and a local scope is created whenever a function is called.

Q6=
When a function returns, the local scope is destroyed, and all the variables in it are forgotten.

Q7=
A return value is the value that a function call evaluates to. Like any value, a return value can be used as part of an expression.

Q8=
If there is no return statement for a function, its return value is None.

Q9=
A global statement will force a variable in a function to refer to the global variable.

Q10=
The data type of None is NoneType.

Q11=
That import statement imports a module named areallyourpetsnamederic. (This isn’t a real Python module, by the way.)

Q12=
This function can be called with spam.bacon().

Q13=
Place the line of code that might cause an error in a try clause.

Q14=
The code that could potentially cause an error goes in the try clause.

The code that executes if an error happens goes in the except clause.